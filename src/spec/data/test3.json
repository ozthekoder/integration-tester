{
  "title": "Ping - Health - Config",
  "cases": [
    {
      "title": "service can be pinged",
      "before": [
        {
          "type": "wait",
          "operation": "wait",
          "args":  [0]
        },
        {
          "type": "ohcm",
          "operation": "login",
          "args": ["rob.tucker"]
        }
      ],
      "after": [
        {
          "type": "wait",
          "operation": "wait",
          "args": [0]
        }
      ],
      "endpoint": "/api/authorization-service/v1/ping",
      "type": "http",
      "action": "get",
      "headers": {
        "content-type": "application/json"
      },
      "expect": {
        "status": {
          "value": 200,
          "assert": "equal",
          "log": "ping status should be 200"
        }
      }
    },
    {
      "title": "service is healthy",
      "before": [

      ],
      "after": [

      ],
      "endpoint": "/api/authorization-service/v1/health",
      "type": "http",
      "action": "post",
      "headers": {
        "content-type": "application/json"
      },
      "expect": {
        "status": {
          "value": 200,
          "assert": "equal",
          "log": "health status should be 200"
        },
        "body": {
          "health": {
            "v": {
              "value": 2,
              "assert": "equal",
              "log": "service version should be 2"
            },
            "self": {
              "status": {
                "value": 200,
                "assert": "equal",
                "log": "service health status should be 200"
              }
            },
            "dependencies": {
              "http": {
                "0": {
                  "status": {
                    "value": 200,
                    "assert": "equal",
                    "log": "metadata service health status should be 200"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "title": "lego policy can be switched to blacklist",
      "before": [
        {
          "type": "ohcm",
          "operation": "login",
          "args": ["rob.tucker"]
        },
        {
          "type": "wait",
          "operation": "wait",
          "args":  [0]
        },
        {
          "type": "ochm",
          "operation": "configure",
          "args": [{
            "default-behavior": "blacklist"
          }]
        }
      ],
      "after": [
        {
          "type": "ohcm",
          "operation": "wait",
          "args": [0]
        }
      ],
      "endpoint": "/api/authorization-service/v1/admin/configure/default-behavior",
      "type": "http",
      "action": "get",
      "headers": {
        "content-type": "application/json"
      },
      "expect": {
        "status": {
          "value": 200,
          "assert": "equal",
          "log": "it should return a 200 as status"
        },
        "text": {
          "value": "blacklist",
          "assert": "equal",
          "log": "default policy should be blacklist after the call"
        }
      }
    },
    {
      "title": "lego policy can be switched to whitelist",
      "before": [
        {
          "type": "ohcm",
          "operation": "login",
          "args": ["rob.tucker"]
        },
        {
          "type": "ochm",
          "operation": "configure",
          "args": [{
            "default-behavior": "whitelist"
          }]
        }
      ],
      "after": [
        {
          "type": "wait",
          "operation": "wait",
          "args": [0]
        }
      ],
      "endpoint": "/api/authorization-service/v1/admin/configure/default-behavior",
      "type": "http",
      "action": "get",
      "headers": {
        "content-type": "application/json"
      },

      "expect": {
        "status": {
          "value": 200,
          "assert": "equal",
          "log": "it should return a 200 as status"
        },
        "text": {
          "value": "whitelist",
          "assert": "equal",
          "log": "default policy should be whitelist after the call"
        }
      }
    }
  ]
}
