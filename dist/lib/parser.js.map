{"version":3,"sources":["../../src/lib/parser.js"],"names":[],"mappings":"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","file":"parser.js","sourcesContent":["import uuid from 'uuid';\nimport { is, forEachKey, xor } from './utility';\nimport { ValidationError } from './utility/custom-errors';\n\nexport default class Parser {\n  constructor(validation) {\n    Object.assign(this, validation)\n  }\n\n  validate(blueprint) {\n    this.validateDesignator(blueprint);\n    this.validateKeys(blueprint);\n    this.validateTypes(blueprint);\n    [...this.recursive, ...this.each.before, ...this.each.after]\n    .forEach((key) => {\n      if (key in blueprint && is(blueprint[key]) === 'array') {\n        blueprint[key].forEach((item) => this.validate(item));\n      }\n    });\n    return true;\n  }\n\n  flatten(blueprint) {\n    if(!blueprint.$skip) {\n      this.addEachOps(blueprint)\n      const toRemove = [...this.recursive, ...this.each.before, ...this.each.after];\n      return this.recursive\n      .map((key) => {\n        if (blueprint[key]) {\n          if(is(blueprint[key]) === 'array') {\n            return blueprint[key]\n            .map((op) => this.flatten(op))\n            .reduce((prev, current) => prev.concat(current), []);\n          }\n          else if (is(blueprint[key]) === 'string') {\n            return [blueprint];\n          }\n        }\n        return [];\n      })\n      .reduce((prev, current) => prev.concat(current), [])\n      .map((op) => {\n        toRemove.forEach((key) => {\n          if (op[key] && is(op[key]) === 'array') {\n            delete op[key];\n          }\n        });\n        return op;\n      });\n    }\n\n    return [];\n  }\n\n  addEachOps(blueprint) {\n    const b = Object.assign({}, blueprint);\n    const { $beforeEach, $afterEach } = b;\n    const toRemove = [...this.each.before, ...this.each.after];\n\n    toRemove.forEach((key) => {\n      delete blueprint[key];\n    });\n\n    if (($beforeEach && $afterEach) &&\n        ($beforeEach.length + $afterEach.length)) {\n      const ops = this.getOps(b);\n    blueprint.$ops = ops\n    .map((op) =>[...$beforeEach, op, ...$afterEach])\n    .reduce((prev, current) =>  prev.concat(current), []);\n    }\n  }\n\n  getOps(blueprint) {\n    return blueprint.$op ? [blueprint] : blueprint.$ops;\n  }\n\n  parse(blueprint) {\n    if(this.validate(blueprint)) return this.flatten(blueprint);\n    throw new ValidationError('Could not parse blueprint');\n  }\n\n  validateDesignator(blueprint, designator = this.designator) {\n    forEachKey(blueprint, (key) => {\n      if(key.charAt(0) !== designator) {\n        throw new ValidationError(`Designator character is missing in the ${keys} key.`)\n      }\n    });\n    return true;\n  }\n\n\n  validateKeys(blueprint, keys = this.keys) {\n    this.mustHaveKeys(blueprint ,keys);\n    this.canHaveKeys(blueprint, keys);\n    this.anyKeys(blueprint, keys);\n    this.eitherOrKeys(blueprint, keys);\n    this.requiredKeys(blueprint, keys);\n    //this.validateLeafNodes(blueprint, keys);\n    return true;\n  }\n\n  generateDefault(type) {\n    if (type) {\n      switch(type) {\n        case '$uuid':\n          return uuid.v4();\n        break;\n        default:\n          return '';\n        break;\n      }\n    }\n\n    return '';\n  }\n\n  mustHaveKeys(blueprint, keys = this.keys) {\n    let { must, defaults } = keys;\n    defaults = defaults || {};\n    if(must && blueprint) {\n      let i;\n      for(i=0; i< must.length; i++) {\n        if(!(must[i] in blueprint)) {\n          if(!(must[i] in defaults)) {\n            throw new ValidationError(`required key ${must[i]} was not found in the json`);\n          }\n          if (!this.isDesignatedKey(defaults[must[i]])) {\n            blueprint[must[i]] = defaults[must[i]];\n          } else {\n            blueprint[must[i]] = this.generateDefault(defaults[must[i]]);\n          }\n        }\n      }\n    }\n\n    if (keys.children) {\n      Object\n      .keys(keys.children)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in blueprint)\n      .forEach((k) => {\n        this.mustHaveKeys(blueprint[k], keys.children[k])\n      });\n    }\n    return true;\n  }\n\n  canHaveKeys(blueprint, keys = this.keys) {\n    const { can } = keys;\n\n    if(can && blueprint) {\n      forEachKey(blueprint, (k) => {\n        if(!can.some((key) => k === key)) {\n          throw new ValidationError('There is an unrecognized key in the json');\n        }\n      });\n    }\n    if (keys.children) {\n\n      Object\n      .keys(keys.children)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in blueprint)\n      .forEach((k) => this.canHaveKeys(blueprint[k], keys.children[k]));\n    }\n    return true;\n  }\n\n  eitherOrKeys(blueprint, keys = this.keys) {\n    const { either_or } = keys;\n\n    if(either_or && blueprint) {\n      const result = either_or.map((pair) => pair.map((key) => (key in blueprint))).reduce((prev, pair) => ( xor(pair) && prev ), true);\n      if(!result) {\n        throw new ValidationError(`One of the explicit or keys conditions failed`);\n      }\n    }\n    if (keys.children) {\n\n      Object\n      .keys(keys.children)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in blueprint)\n      .forEach((k) => this.eitherOrKeys(blueprint[k], keys.children[k]));\n    }\n    return true;\n  }\n\n  anyKeys(blueprint, keys = this.keys) {\n    const { any } = keys;\n\n    if(any && blueprint) {\n\n      const result = any\n      .map((key) => key in blueprint)\n      .reduce((prev, predicate) => (prev || predicate), false);\n      if(!result) {\n        throw new ValidationError(`One of any key conditions failed`);\n      }\n    }\n    if (keys.children) {\n\n      Object\n      .keys(keys.children)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in blueprint)\n      .forEach((k) => this.anyKeys(blueprint[k], keys.children[k]));\n    }\n    return true;\n  }\n\n  requiredKeys(blueprint, keys = this.keys) {\n    const { requires } = keys;\n\n    if(blueprint && requires) {\n      const results = requires.map((reqs) => reqs.map((key) => (key in blueprint)));\n      const result = results.every((i) => (i.every((k) => k === false) || i.every((k) => k === true)));\n      if(!result) {\n        throw new ValidationError(`One of the required keys do not exist on the object`);\n      }\n    }\n    if (keys.children) {\n\n      Object\n      .keys(keys.children)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in blueprint)\n      .forEach((k) => this.requiredKeys(blueprint[k], keys.children[k]));\n    }\n\n    return true;\n  }\n\n  validateLeafNode(blueprint, keys = this.keys) {\n    const result = this.validateKeys(blueprint, keys);\n\n    if(!result) {\n      throw new ValidationError(`Leaf node validation failed!`);\n    }\n    return true;\n  }\n\n  validateLeafNodes(blueprint, keys = this.keys) {\n    const { leaf } = keys;\n\n    if(blueprint && leaf) {\n      if (this.isLeafNode(blueprint)) {\n        this.validateLeafNode(blueprint, leaf)\n      } else {\n        forEachKey(blueprint, (key) => {\n          this.validateLeafNodes(blueprint[key], keys);\n        });\n      }\n    }\n    if (keys.children) {\n\n      Object\n      .keys(keys.children)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in blueprint)\n      .forEach((k) => this.validateLeafNodes(blueprint[k], keys.children[k]));\n    }\n\n    return true;\n  }\n\n  isLeafNode(node) {\n    let check = true;\n\n    forEachKey(node, (key) => {\n      if (!this.isDesignatedKey(key)) {\n        check = false;\n      }\n    });\n\n    return check;\n  }\n\n  isDesignatedKey(key) {\n    if(is(key) === 'string'){\n      return key.indexOf(this.designator) === 0;\n    }\n\n    return false;\n  }\n\n  validateTypes(blueprint, types = this.types) {\n    if(blueprint) {\n      Object\n      .keys(blueprint)\n      .filter(this.isDesignatedKey.bind(this))\n      .forEach((key) => this.validateType(blueprint[key], types[key]));\n\n      Object\n      .keys(blueprint)\n      .filter(this.isDesignatedKey.bind(this))\n      .forEach((key) => this.validateTypes(blueprint[key], types[key]));\n    }\n    return true;\n  }\n\n  validateType(value, allowed) {\n    if(allowed && is(allowed) === 'string') {\n      allowed = allowed.split('|');\n      const result = allowed.some((type) => type === is(value));\n      if(!result) {\n        throw new ValidationError(`Type validation on key failed!`);\n      }\n    }\n      Object\n      .keys(value)\n      .filter(this.isDesignatedKey.bind(this))\n      .filter((k) => k in allowed)\n      .forEach((key) => this.validateTypes(value[key], allowed[key]));\n    return true;\n  }\n}\n"]}