{"version":3,"sources":["../../../src/lib/plugins/plugin.js"],"names":[],"mappings":";;;;;;AAAA;;;;IAEM,M;AACJ,oBAA2B;AAAA,QAAf,QAAe,yDAAJ,EAAI;;AAAA;;AACzB,SAAK,QAAL,GAAgB,QAAhB;AACD;;;;6BAMQ,O,EAAS;AAAA;;AAChB,WAAK,QAAL,CAAc,OAAd,CAAsB,UAAC,GAAD,EAAS;AAC7B,YAAG,CAAC,QAAQ,OAAR,CAAgB,GAAhB,CAAJ,EAA0B;AACxB,gBAAM,6CAA+B,GAA/B,yBAAsD,MAAK,IAA3D,cAAN;AACD;AACF,OAJD;AAKA,WAAK,OAAL,GAAe,OAAf;AACD;;;wBAXU;AACT,aAAO,KAAK,WAAL,CAAiB,IAAxB;AACD;;;;;;AAUF;;AAED,iBAAO,IAAP,GAAc,SAAd;AACA,OAAO,OAAP","file":"plugin.js","sourcesContent":["import { PluginOrderError } from '../utility/custom-errors';\n\nclass Plugin {\n  constructor(required = []) {\n    this.required = required;\n  }\n\n  get type() {\n    return this.constructor.type;\n  }\n\n  register(context) {\n    this.required.forEach((req) => {\n      if(!context.plugins[req]) {\n        throw new PluginOrderError(`Plugin ${req} is required for ${this.type} plugin.`);\n      }\n    })\n    this.context = context;\n  }\n};\n\nPlugin.type = 'generic';\nmodule.exports = Plugin;\n"]}