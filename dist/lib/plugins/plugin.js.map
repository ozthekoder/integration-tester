{"version":3,"sources":["../../../src/lib/plugins/plugin.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AAEA,OAAO,OAAP;AACE,oBAAsC;AAAA,QAA1B,IAA0B,yDAAnB,EAAmB;AAAA,QAAf,QAAe,yDAAJ,EAAI;;AAAA;;AACpC,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;AAJH;AAAA;AAAA,6BAMW,OANX,EAMoB;AAAA;;AAChB,WAAK,QAAL,CAAc,OAAd,CAAsB,UAAC,GAAD,EAAS;AAC7B,YAAG,CAAC,QAAQ,OAAR,CAAgB,GAAhB,CAAJ,EAA0B;AACxB,gBAAM,6CAA+B,GAA/B,yBAAsD,MAAK,IAA3D,cAAN;AACD;AACF,OAJD;AAKA,WAAK,OAAL,GAAe,OAAf;AACD;AAbH;;AAAA;AAAA","file":"plugin.js","sourcesContent":["import { PluginOrderError } from '../utility/custom-errors';\n\nmodule.exports = class Plugin {\n  constructor(type = '', required = []) {\n    this.type = type;\n    this.required = required;\n  }\n\n  register(context) {\n    this.required.forEach((req) => {\n      if(!context.plugins[req]) {\n        throw new PluginOrderError(`Plugin ${req} is required for ${this.type} plugin.`);\n      }\n    })\n    this.context = context;\n  }\n}\n"]}