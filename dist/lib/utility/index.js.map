{"version":3,"sources":["../../../src/lib/utility/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import defaults from '../config/config.json';\n\nconst is =  (function toType(global) {\n  return function(obj) {\n    if (obj === global) {\n      return \"global\";\n    }\n    return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n  }\n})(global);\n\nconst forEachKey = (obj, cb) => {\n  if(obj && is(obj) === 'object') {\n    const keys = Object.keys(obj);\n    let i;\n    for(i=0; i<keys.length; i++) {\n      cb(keys[i], i, keys);\n    }\n  }\n};\n\nconst xor = (predicates) => {\n  return predicates\n  .reduce((prev, predicate) => ( ( prev && !predicate ) || ( !prev && predicate ) ), false);\n};\n\nconst isJsonSafePrimitive = (value) => {\n  return (\n    typeof value === 'number' ||\n      typeof value === 'string' ||\n      typeof value === 'boolean'\n  );\n};\n\nconst getAllAssertions = (payload, assertions) => {\n  return assertions.map((assertion) => {\n    return {\n      expectation: assertion.$value,\n      assertion: assertion.$assert,\n      log : `${assertion.$path.join('.')} should be ${assertion.$assert} to ${assertion.$value}`,\n      actual: assertion.$path.reduce((prev, next) => prev[next], payload)\n    }\n  });\n};\n\nconst getReferences = (actual, toSave) => {\n  let refs = {};\n\n  if (toSave &&\n      is(toSave) === 'string' &&\n        toSave.indexOf('___#') === 0 &&\n          toSave.indexOf('#___') === (toSave.length - 4)) {\n    toSave = toSave.slice(4, -4);\n  refs[toSave] = actual;\n  } else if (toSave && actual && ( is(toSave) === 'object' || is(toSave) === 'array' )){\n    const keys = Object.keys(toSave);\n    const length = keys.length;\n\n    for(var i = 0; i < length; i++) {\n      refs = Object.assign(refs, getReferences((actual ? actual[keys[i]] : null), toSave[keys[i]]));\n    }\n  }\n  return refs;\n};\n\nconst applyReferences = (saved, op) => {\n\n  const tpl = JSON.stringify(op);\n  let pieces = tpl.split(/(\\\"\\$\\{[\\s]*.*?[\\s]*\\}\\\")/g);\n  let inflated = pieces\n  .map((p) => {\n    if(/(\\\"\\$\\{[\\s]*.*?[\\s]*\\}\\\")/g.test(p)) {\n      let fromSaved = saved[(p.slice(3, -2))];\n\n      if(is(fromSaved) === 'array' || is(fromSaved) === 'object') {\n        fromSaved = JSON.stringify(fromSaved);\n      } else if(is(fromSaved) === 'string') {\n        fromSaved = `\"${fromSaved}\"`;\n      }\n      p = fromSaved;\n    }\n\n    return p;\n  })\n  .reduce((prev, current) => `${prev}${current}`, '');\n\n  pieces = inflated.split(/(\\$\\{[\\s]*.*?[\\s]*\\})/g);\n  inflated = pieces\n  .map((p) => {\n    if(/(\\$\\{[\\s]*.*?[\\s]*\\})/g.test(p)) {\n      let fromSaved = saved[(p.slice(2, -1))];\n\n      if(is(fromSaved) === 'array' || is(fromSaved) === 'object') {\n        fromSaved = JSON.stringify(fromSaved);\n      }\n      p = fromSaved;\n    }\n\n    return p;\n  })\n  .reduce((prev, current) => `${prev}${current}`, '');\n  return JSON.parse(inflated);\n};\n\nconst createURL = (endpoint, config = defaults.plugins.http) => {\n  const { host, port, path } = config;\n  return `http://${host}:${port}${path}${endpoint}`;\n}\n\n  export {\n    is,\n    forEachKey,\n    xor,\n    isJsonSafePrimitive,\n    createURL,\n    getReferences,\n    applyReferences,\n    getAllAssertions,\n  };\n"]}