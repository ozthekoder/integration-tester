{"version":3,"sources":["../../src/spec/bootstrap.js"],"names":[],"mappings":"AAAA;;;;AACA,IAAM,UAAU,QAAQ,UAAR,CAAhB;AACA,IAAM,OAAO,QAAQ,MAAR,CAAb;AACA,IAAM,aAAa,QAAQ,YAAR,CAAnB;AACA,IAAM,QAAQ,QAAQ,OAAR,CAAd;AACA,IAAM,YAAY,QAAQ,YAAR,CAAlB;AACA,IAAM,mBAAmB,QAAQ,kBAAR,CAAzB;AACA,QAAQ,mBAAR;;AAGA,eAAK,GAAL;AACA,eAAK,GAAL;;;AAIA,OAAO,MAAP,GAAgB,eAAK,MAArB;AACA,OAAO,GAAP,GAAa,gBAAM,GAAnB;AACA,OAAO,IAAP,GAAc,gBAAM,IAApB;AACA,OAAO,IAAP,GAAc,gBAAM,IAApB;AACA,OAAO,aAAP,GAAuB,gBAAM,aAA7B;AACA,OAAO,UAAP","file":"bootstrap.js","sourcesContent":["'use strict';\nconst Promise = require('bluebird');\nconst chai = require('chai');\nconst proxyquire = require('proxyquire');\nconst sinon = require('sinon');\nconst sinonChai = require('sinon-chai');\nconst chai_as_promised = require('chai-as-promised');\nrequire('sinon-as-promised')(Promise);\n\n\nchai.use(sinonChai);\nchai.use(chai_as_promised);\n\n\n// add test methods to global scope\nglobal.expect = chai.expect;\nglobal.spy = sinon.spy;\nglobal.stub = sinon.stub;\nglobal.mock = sinon.mock;\nglobal.useFakeTimers = sinon.useFakeTimers;\nglobal.proxyquire = proxyquire;\n\n\n"]}